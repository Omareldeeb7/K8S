On 3 nodes:
1- swapoff -a

2- cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

3- cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter

4- sudo sysctl --system

5- sysctl net.ipv4.ip_forward
6- lsmod | grep overlay

Installing Containerd on 3 nodes:

1- sudo apt-get update
2- sudo apt-get install ca-certificates curl -y
3- sudo install -m 0755 -d /etc/apt/keyrings
4- sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
5- sudo chmod a+r /etc/apt/keyrings/docker.asc
6- echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
$(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
7- sudo apt-get update
8- sudo apt-get install containerd.io
9- containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | sed 's/sandbox_image = "registry.k8s.io\/pause:3.10"/sandbox_image = "registry.k8s.io\/pause:3.10"/' | sudo tee /etc/containerd/config.toml
sudo cat /etc/containerd/config.toml | grep SystemdCgroup --> SystemdCgroup = true
10- systemctl restart containerd
11- systemctl status containerd
12- sudo cat /etc/containerd/config.toml | grep SystemdCgroup

Installing Kubeadm, Kubelet and Kubectl on 3 nodes:
1- sudo apt-get update
2- sudo apt-get install -y apt-transport-https ca-certificates curl gpg
3- curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
4- echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
5- sudo apt-get update
6- sudo apt-get install -y kubelet kubeadm kubectl
7- sudo apt-mark hold kubelet kubeadm kubectl
8- sudo systemctl enable --now kubelet


Installing the Cluster on the master server only:
1- kubeadm init --pod-network-cidr=10.200.0.0/16 --apiserver-advertise-address=192.168.1.11
2- mkdir -p $HOME/.kube
3- sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
4- sudo chown $(id -u):$(id -g) $HOME/.kube/config
5- kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
6- kubectl edit daemonset -n kube-system weave-net
7- Add this part inside second spec , after env:
         - name: IPALLOC_RANGE
             value: 10.200.0.0/16

Joining the cluster:
kubeadm join 192.168.1.11:6443 --token mcqubc.t8cofducqjpfct0a \
        --discovery-token-ca-cert-hash sha256:1f4d19eae805c77f578c079a9009a723c1666ed5b743126618c08e9420eaa7cc